import math
import random
import pygame

pygame.init()

SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
PLAYER_STRAT_X = 370
PLAYER_STRAT_Y = 480
ENEMY_START_YMIN = 50
ENEMY_START_YMAX = 150
ENEMY_SPEED_X = 1
ENEMY_START_Y = 40
BULLET_SPEED_Y = 10
COLLISION_DISTANCE = 27

screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
bg = pygame.transform.scale(pygame.image.load("SpaceBG.jpg"), (SCREEN_WIDTH, SCREEN_HEIGHT))

playerIMG = pygame.transform.scale(pygame.image.load("Player.png"), (64, 64))
icon = pygame.image.load("ufo.png")
pygame.display.set_caption("Space Invaders")

pygame.display.set_icon(icon)

playerX = PLAYER_STRAT_X
playerY = PLAYER_STRAT_Y

player_x_change = 0

enemyIMG = []
enemyX = []
enemyY = []
enemy_x_change = []
enemy_y_change = []
num_enemies = 7

for i in range(num_enemies):
    enemyIMG.append(pygame.transform.scale(pygame.image.load("Enemy.png"), (64, 64)))
    enemyX.append(random.randint(0, SCREEN_WIDTH - 64))
    enemyY.append(random.randint(ENEMY_START_YMIN, ENEMY_START_YMAX))
    enemy_x_change.append(ENEMY_SPEED_X)
    enemy_y_change.append(ENEMY_START_Y)

bulletIMG = pygame.transform.scale(pygame.image.load("Bullet.png"), (32, 32))
bulletX = 0
bulletY = PLAYER_STRAT_Y
bulletx_change = 0
bullety_change = BULLET_SPEED_Y
bullet_state = "ready"

score_value = 0
font = pygame.font.Font("freesansbold.ttf", 32)
textX = 10
textY = 10

gameOver_font = pygame.font.Font("freesansbold.ttf", 32)

def show_score(x, y):
    score = font.render("Score :" + str(score_value), True, (255, 255, 255))
    screen.blit(score, (x, y))

def gameover_text():
    gameOver_text = font.render("Game Over", True, (255, 255, 255))
    screen.blit(gameOver_text, (200, 250))

def showPlayer(x, y):
    screen.blit(playerIMG, (x, y))

def showEnemy(x, y):
    screen.blit(enemyIMG[i], (x, y))

def fire_bullet(x, y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bulletIMG, (x + 16, y + 10))

def iscollision(enemyX, enemyY, bulletY, bulletX):
    distance = math.sqrt((enemyX - bulletX) ** 2 + (enemyY - bulletY) ** 2)
    return distance < COLLISION_DISTANCE

running = True

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                player_x_change = -5
            if event.key == pygame.K_RIGHT:
                player_x_change = 5

            if event.key == pygame.K_SPACE and bullet_state == "ready":
                bulletX = playerX
                fire_bullet(bulletX, bulletY)

        if event.type == pygame.KEYUP and event.key in [pygame.K_LEFT, pygame.K_RIGHT]:
            player_x_change = 0

    playerX += player_x_change
    playerX = max(0, min(playerX, SCREEN_WIDTH - 50))

    screen.blit(bg, (0, 0))

    for i in range(num_enemies):
        enemyX[i] += enemy_x_change[i]

        if enemyX[i] <= 0 or enemyX[i] >= SCREEN_WIDTH - 50:
            enemy_x_change[i] *= -1
            enemyY[i] += enemy_y_change[i]

        if iscollision(enemyX[i], enemyY[i], bulletY, bulletX):
            bulletY = PLAYER_STRAT_Y
            bullet_state = "ready"
            score_value += 1
            enemyX[i] = random.randint(0, SCREEN_WIDTH - 64)
            enemyY[i] = random.randint(ENEMY_START_YMIN, ENEMY_START_YMAX)

        showEnemy(enemyX[i], enemyY[i])

    if bullet_state == "fire":
        fire_bullet(bulletX, bulletY)
        bulletY -= bullety_change

    if bulletY <= 0:
        bulletY = PLAYER_STRAT_Y
        bullet_state = "ready"

    showPlayer(playerX, playerY)
    show_score(textX, textY)
    pygame.display.update()